syntax = "proto3";

package auth;
option go_package = "gen/proto;auth";

import "google/api/annotations.proto";

// SignupRequest represents the request for user registration
message SignupRequest {
  string username = 1;
  string password = 2;
  string email = 3;
}

// SignupResponse represents the response after successful registration
message SignupResponse {
  int64 user_id = 1;
  string username = 2;
  string email = 3;
}

// LoginRequest represents the request for user authentication
message LoginRequest {
  string username = 1;
  string password = 2;
}

// LoginResponse represents the response after successful authentication
message LoginResponse {
  string access_token = 1;
  string refresh_token = 2;
}

// VerifyRequest represents the request for token validation
message VerifyRequest {
  string token = 1;
}

// VerifyResponse represents the response after token validation
message VerifyResponse {
  string username = 1;
  bool valid = 2;
}

// RefreshRequest represents the request for token refresh
message RefreshRequest {
  string refresh_token = 1;
}

// AuthService defines the authentication service
service AuthService {
  // Signup registers a new user
  rpc Signup(SignupRequest) returns (SignupResponse) {
    option (google.api.http) = {
      post: "/v1/auth/signup"
      body: "*"
    };
  }
  
  // Login authenticates a user and returns JWT tokens
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/login"
      body: "*"
    };
  }
  
  // VerifyToken validates a JWT token
  rpc VerifyToken(VerifyRequest) returns (VerifyResponse) {
    option (google.api.http) = {
      post: "/v1/auth/verify"
      body: "*"
    };
  }
  
  // RefreshToken generates new access and refresh tokens
  rpc RefreshToken(RefreshRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/auth/refresh"
      body: "*"
    };
  }
}
